apiVersion: apps/v1
kind: Deployment
metadata:
  name: ping-pong-api
  labels:
    app: ping-pong-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ping-pong-api
  template:
    metadata:
      labels:
        app: ping-pong-api
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '5000'
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      containers:
      - name: ping-pong-api
        image: vibhor995/ping_pong:latest
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /mnt
          name: test-volume
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: test-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ping-pong-api
spec:
  selector:
    app: ping-pong-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP

